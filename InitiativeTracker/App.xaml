<Application x:Class="InitiativeTracker.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:InitiativeTracker"
             StartupUri="Views/MainWindow.xaml">
    <Application.Resources>
        <ResourceDictionary>
            <Color x:Key="Text">#FFFFFF</Color>
            <Color x:Key="Background">#1C1D22</Color>   <!-- Window  -->
            <Color x:Key="Primary">#25262D</Color>      <!-- Decks   -->
            <Color x:Key="Secondary">#2F323A</Color>    <!-- Cards   -->
            <Color x:Key="Accent">#087F8C</Color>       <!-- Buttons -->
            <Color x:Key="Trim">#40434F</Color>         <!-- Borders -->
            <Color x:Key="Text-Inactive">#40FFFFFF</Color>
            <Color x:Key="Trim-Inactive">#8040434F</Color>
            <Color x:Key="Accent-Inactive">#40087F8C</Color>
            <Color x:Key="Accent-Highlight">#0A9DAE</Color>

            <SolidColorBrush x:Key="Error">#F21B3F</SolidColorBrush>
            <SolidColorBrush x:Key="Success">#28965A</SolidColorBrush>
            
            <SolidColorBrush x:Key="WindowBackground" Color="{StaticResource Background}"/>

            <SolidColorBrush x:Key="TitleBackground" Color="#00000000"/>
            <SolidColorBrush x:Key="TitleText" Color="{StaticResource Text}"/>

            <SolidColorBrush x:Key="BodyBackground" Color="#00000000"/>
            <SolidColorBrush x:Key="BodyText" Color="{StaticResource Text}"/>


            <SolidColorBrush x:Key="ButtonBorder" Color="{StaticResource Trim}"/>
            <SolidColorBrush x:Key="ButtonBackground" Color="{StaticResource Accent}"/>
            <SolidColorBrush x:Key="ButtonText" Color="{StaticResource Text}"/>
            <SolidColorBrush x:Key="ButtonTextInactive" Color="{StaticResource Text-Inactive}"/>
            <SolidColorBrush x:Key="ButtonBackgroundInactive" Color="{StaticResource Accent-Inactive}"/>
            <SolidColorBrush x:Key="ButtonBackgroundHover" Color="{StaticResource Accent-Highlight}"/>

            <SolidColorBrush x:Key="InputBorder" Color="{StaticResource Trim}"/>
            <SolidColorBrush x:Key="InputBorderFocused" Color="{StaticResource Accent}"/>
            <SolidColorBrush x:Key="InputBackground"  Color="{StaticResource Background}"></SolidColorBrush>
            <SolidColorBrush x:Key="InputHighlight" Color="{StaticResource Accent-Highlight}"/>
            <SolidColorBrush x:Key="InputText" Color="{StaticResource Text}"/>
            <SolidColorBrush x:Key="InputInactive">#AAB7B5</SolidColorBrush>

            <SolidColorBrush x:Key="DeckBorder" Color="{StaticResource Trim}"/>
            <SolidColorBrush x:Key="DeckBackground" Color="{StaticResource Primary}"/>
            <SolidColorBrush x:Key="DeckInactive">#00000000</SolidColorBrush>

            <SolidColorBrush x:Key="CardBorder" Color="{StaticResource Trim}"/>
            <SolidColorBrush x:Key="CardBackground" Color="{StaticResource Secondary}"/>
            <SolidColorBrush x:Key="CardInactive">#00000000</SolidColorBrush>

            <Style x:Key="WindowBase" TargetType="Window">
                <Setter Property="Background" Value="{StaticResource WindowBackground}"/>
            </Style>
            <Style TargetType="{x:Type local:MainWindow}" BasedOn="{StaticResource WindowBase}"/>
            <Style TargetType="{x:Type local:NewCharacterWindow}" BasedOn="{StaticResource WindowBase}"/>
            
            <Style TargetType="Label">
                <Setter Property="Background" Value="{StaticResource BodyBackground}"/>
                <Setter Property="Foreground" Value="{StaticResource BodyText}"/>
                <Setter Property="FontSize" Value="12"/>
            </Style>
            
            <Style x:Key="headerLabel" TargetType="Label">
                <Setter Property="Background" Value="{StaticResource BodyBackground}"/>
                <Setter Property="Foreground" Value="{StaticResource BodyText}"/>
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="FontWeight" Value="Bold"/>
            </Style>

            <Style x:Key="titleLabel" TargetType="Label">
                <Setter Property="Background" Value="{StaticResource TitleBackground}"/>
                <Setter Property="Foreground" Value="{StaticResource TitleText}"/>
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="FontWeight" Value="Bold"/>
            </Style>

            <Style TargetType="TextBox">
                <Setter Property="Background" Value="{StaticResource InputBackground}"/>
                <Setter Property="Foreground" Value="{StaticResource InputText}"/>
                <Setter Property="BorderBrush" Value="{StaticResource InputBorder}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="FontSize" Value="14"/>
                <Style.Resources>
                    <Style TargetType="Border">
                        <Setter Property="CornerRadius" Value="3"/>
                    </Style>
                </Style.Resources>
            </Style>
            
            <Style TargetType="Button">
                <Setter Property="Foreground" Value="{StaticResource ButtonText}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border x:Name="border" Background="{StaticResource ButtonBackground}" BorderBrush="{StaticResource ButtonBorder}" BorderThickness="1" CornerRadius="3">
                                <ContentPresenter x:Name="contentPresenter" Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="2" TextBlock.Foreground="{StaticResource ButtonText}"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="border" Property="Background" Value="{StaticResource ButtonBackgroundInactive}"/>
                                    <Setter TargetName="contentPresenter" Property="TextBlock.Foreground" Value="{StaticResource ButtonTextInactive}"/>
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsEnabled" Value="True"/>
                                        <Condition Property="IsMouseOver" Value="True"/>
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="border" Property="Background" Value="{StaticResource ButtonBackgroundHover}"/>
                                </MultiTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="CheckBox">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type CheckBox}">
                            <Border BorderBrush="{StaticResource ButtonBorder}" BorderThickness="1" CornerRadius="3" Width="14" Height="14" Background="{StaticResource InputBackground}">
                                <Ellipse Width="8" Height="8" HorizontalAlignment="Center" VerticalAlignment="Center" x:Name="checkIndicator"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter TargetName="checkIndicator" Property="Fill" Value="{StaticResource ButtonBackground}"/>
                                </Trigger>
                                <Trigger Property="IsChecked" Value="False">
                                    <Setter TargetName="checkIndicator" Property="Visibility" Value="Hidden"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="checkIndicator" Property="Fill" Value="{StaticResource ButtonBackgroundInactive}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            
            <Style TargetType="ListBox">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ListBox">
                            <ScrollViewer Margin="0" Focusable="false" Background="Transparent">
                                <StackPanel Margin="2" IsItemsHost="True" />
                            </ScrollViewer>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="DataGrid">
                <Setter Property="VerticalGridLinesBrush" Value="{StaticResource InputBorder}"/>
                <Setter Property="HorizontalGridLinesBrush" Value="{StaticResource InputBorder}"/>
                <Setter Property="Background" Value="{StaticResource WindowBackground}"/>
                <Setter Property="HeadersVisibility" Value="Column"/>
                <Setter Property="AutoGenerateColumns" Value="False"/>
                <Setter Property="SelectionMode" Value="Single"/>
                <Setter Property="ColumnHeaderStyle">
                    <Setter.Value>
                        <Style TargetType="DataGridColumnHeader">
                            <Setter Property="Background" Value="{StaticResource DeckBackground}"/>
                            <Setter Property="Foreground" Value="{StaticResource BodyText}"/>
                            <Setter Property="HorizontalContentAlignment" Value="Center"/>
                            <Setter Property="Margin" Value="3,0,3,0"/>
                        </Style>
                    </Setter.Value>
                </Setter>
                <Setter Property="RowStyle">
                    <Setter.Value>
                        <Style TargetType="DataGridRow">
                            <Setter Property="Background" Value="{StaticResource InputBackground}"/>
                            <Setter Property="Foreground" Value="{StaticResource InputText}"/>
                        </Style>
                    </Setter.Value>
                </Setter>
                <Setter Property="CellStyle">
                    <Setter.Value>
                        <Style TargetType="DataGridCell">
                            <Style.Triggers>
                                <Trigger Property="IsEditing" Value="True">
                                    <Setter Property="BorderBrush" Value="{StaticResource InputBorderFocused}"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="DataGridCell">
                                                <TextBox x:Name="cellTextBox"
                                                         Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Content.Text, Mode=TwoWay, UpdateSourceTrigger=Default}"
                                                         HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Padding="0" BorderThickness="1"
                                                         BorderBrush="{StaticResource InputBorderFocused}"/>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsFocused" Value="True">
                                                        <Setter TargetName="cellTextBox" Property="FocusManager.FocusedElement" Value="{Binding ElementName=cellTextBox}"/>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Setter.Value>
                </Setter>
                <Style.Resources>
                    <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="{StaticResource Secondary}"/>
                </Style.Resources>
            </Style>

            <Style x:Key="Card" TargetType="Border">
                <Setter Property="BorderBrush" Value="{StaticResource CardBorder}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="CornerRadius" Value="3"/>
                <Style.Triggers>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Background" Value="{StaticResource CardInactive}"/>
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="True">
                        <Setter Property="Background" Value="{StaticResource CardBackground}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
            
            <Style x:Key="Deck" TargetType="Border">
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="CornerRadius" Value="2"/>
                <Setter Property="BorderBrush" Value="{StaticResource DeckBorder}"/>
                <Setter Property="Background" Value="{StaticResource DeckBackground}"/>
                <Setter Property="Padding" Value="3"/>
                <Style.Triggers>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Background" Value="{StaticResource DeckInactive}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
        </ResourceDictionary>
    </Application.Resources>
</Application>
